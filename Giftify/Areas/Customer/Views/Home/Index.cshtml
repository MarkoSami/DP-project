@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}
<main class="container-fluid">
    <!-- Added Search Bar at the Top -->
    <div class="row mb-4">
        <div class="col-12">
            <form method="get" id="searchForm" class="d-flex">
                <input type="search" name="searchQuery" class="form-control me-2" placeholder="Search by Title or Author"
                       value="@Model.SearchQuery" aria-label="Search">
                <button type="submit" class="btn btn-outline-primary">
                    <i class="bi bi-search"></i> Search
                </button>
            </form>
        </div>
    </div>

    <div class="row">
        <!-- Category Filter and Sorting on the Left -->
        <div class="col-12 col-md-3 mb-4">
            @if (Model.Categories != null && Model.Categories.Any())
            {
                <div class="category-filter">
                    <h4>Filter by Categories</h4>
                    <form method="get" id="filterForm">
                        <!-- Hidden search query input to preserve search across filters -->
                        <input type="hidden" name="searchQuery" value="@Model.SearchQuery" />

                        @foreach (var category in Model.Categories)
                        {
                            <div>
                                <input type="checkbox" name="selectedCategories" value="@category.Id" id="category_@category.Id"
                                @(Model.SelectedCategoryIds.Contains(category.Id) ? "checked" : "") />
                                <label for="category_@category.Id">@category.Name</label>
                            </div>
                        }

                        <!-- Sorting Dropdown -->
                        <div class="mt-3">
                            <label for="sortOrder" class="form-label">Sort by:</label>
                            <select name="sortOrder" id="sortOrder" class="form-select form-select-sm w-100" onchange="this.form.submit()">
                                <option value="" selected="@(string.IsNullOrEmpty(Model.SortOrder))">Default</option>
                                <option value="price_asc" selected="@(Model.SortOrder == "price_asc")">Price (Low to High)</option>
                                <option value="price_desc" selected="@(Model.SortOrder == "price_desc")">Price (High to Low)</option>
                                <option value="rating_asc" selected="@(Model.SortOrder == "rating_asc")">Rating (Low to High)</option>
                                <option value="rating_desc" selected="@(Model.SortOrder == "rating_desc")">Rating (High to Low)</option>
                            </select>

                            <!-- Hidden inputs to preserve selected categories -->
                            @if (Model.SelectedCategoryIds != null)
                            {
                                @foreach (var categoryId in Model.SelectedCategoryIds)
                                {
                                    <input type="hidden" name="selectedCategories" value="@categoryId" />
                                }
                            }
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Apply Filters</button>
                    </form>
                </div>
            }
        </div>

        <!-- Books List on the Right -->
        <div class="col-12 col-md-9">
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4 mt-2">
                @foreach (var book in Model.Books)
                {
                    <div>
                        <a asp-area="Customer" asp-controller="Home" asp-action="Details" asp-route-id="@book.Id" style="text-decoration: none">
                            <div class="card">
                                <img src="@book.ImageUrl" class="card-img-top" style="height: 16rem; object-fit: contain" alt="...">
                                <div class="card-body">
                                    <p class="text-success"><i class="bi bi-tags-fill"></i> @book.Category.Name</p>
                                    <h5 class="card-title fs-6 text-primary">@book.Title</h5>
                                    <h5 class="fs-6 card-title text-muted fw-bold my-3">@book.Price EGP</h5>
                                    <p class="text-warning">Rating: @book.Rating <i class="bi bi-star-fill"></i></p>
                                    <!-- Add to Cart Button -->
                                    <form method="post" asp-controller="Cart" asp-action="AddToCart">
                                        <input type="hidden" name="bookId" value="@book.Id" />
                                        <button type="submit" class="btn btn-primary w-100">
                                            <i class="bi bi-cart-fill"></i> Add to cart
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</main>

<script>
    // Use event delegation to handle dynamically created buttons
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.desc').forEach((e) => {
            if (e.innerHTML.length > 100) {
                e.innerHTML = e.innerHTML.substring(0, 100) + '...';
            }
        });
    });
</script>
