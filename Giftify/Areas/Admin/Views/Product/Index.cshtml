@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model List<Book>

<div class="container">
    <div class="row py-4">
        <div class="col-6">
            <h2>Products List</h2>
        </div>
        <div class="col-6 text-end">
            <a class="btn btn-outline-success" asp-controller="Product" asp-action="Upsert"> <i class="bi bi-plus-lg fs-6"></i> Add a new Product </a>
        </div>
    </div>
</div>

<table id="dataTable" class="table table-bordered table-striped" style="width: 100%">
    <thead>
        <tr>
            <th style="min-width: 20px">ID</th>
            <th>Product Title</th>
            <th>Price</th>
            <th>Price - 10</th>
            <th>Price - 20</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>

    </tbody>
</table>

 <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Product</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cancel"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete the product? <br /> <b class="fw-1">This Action cannot be reverted</b></p>
      </div>
      <div class="modal-footer">
            <form asp-controller="Product" asp-action="Delete" method="post" id="deleteForm">
                
                <button type="submit" data-bs-dismiss="modal" class="btn btn-danger">Delete</button>
            </form>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>

@section Scripts{
    <script src="~/js/product.js"></script>
    <script>
        // Use event delegation to handle dynamically created buttons
        document.addEventListener('DOMContentLoaded', function () {
            document.addEventListener('click', function (event) {
                if (event.target && event.target.closest('.delete-btn')) {
                    console.log("Entered");

                    var button = event.target.closest('.delete-btn');
                    var productId = button.getAttribute('data-id'); // Get the Product Id from the data attribute
                    console.log(productId);

                    var deleteForm = document.getElementById('deleteForm');
                    deleteForm.action = `Product/Delete/${productId}`; // Update form action dynamically
                    var modal = new bootstrap.Modal(document.getElementById('exampleModal'));
                    modal.show(); // Show the modal
                }
            });
        });
    </script>

}


@* 
document.querySelectorAll('.expand').forEach(element => {
    element.addEventListener('click', function () {
        var desc = this.previousElementSibling;

        // Get the current computed maxHeight
        var currentMaxHeight = window.getComputedStyle(desc).maxHeight;

        // Toggle between collapsed (100px) and expanded (no restriction)
        if (currentMaxHeight === '100px') {
            desc.style.maxHeight = 'none';  // Fully expand the element
            this.innerText = 'Collapse';
        } else {
            desc.style.maxHeight = '100px'; // Collapse to 100px
            this.innerText = 'Expand';
        }
    });
});


    document.querySelectorAll('.expand').forEach(element => {
        var desc = element.previousElementSibling;


        if (desc.offsetHeight < 100) {
            element.style.display = 'none';  // Hides the 'expand' element if desc's height is less than 100px
        }
    });


     *@

